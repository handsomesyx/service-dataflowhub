generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model role {
  id               BigInt?
  role_name        String?   @db.VarChar(64)
  role_description String?   @db.VarChar(255)
  create_time      DateTime? @db.DateTime(0)
  update_time      DateTime? @db.DateTime(0)
  is_delete        Int?      @db.TinyInt

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model user {
  id             BigInt?
  member_account String?   @db.VarChar(64)
  role_id        BigInt?
  name           String?   @db.VarChar(64)
  avator         String?   @db.VarChar(255)
  phone          Int?
  email          String?   @db.VarChar(64)
  create_time    DateTime? @db.DateTime(0)
  update_time    DateTime? @db.DateTime(0)
  is_delete      Int?      @db.TinyInt

  @@ignore
}

model userloglogin {
  id          Int       @id
  operation   Int?      @db.TinyInt
  status      Int?      @db.TinyInt
  user_agent  String?   @db.VarChar(500)
  ip          String?   @db.VarChar(32)
  username    String?   @db.VarChar(50)
  creator_id  Int?
  create_time DateTime? @db.DateTime(0)
  update_time DateTime? @db.DateTime(0)
  updater_id  Int?
  is_delete   Int?      @db.TinyInt
}

model userlogoperation {
  id             Int       @id
  operation      Int?
  request_query  String?   @db.Text
  request_type   String?   @db.VarChar(50)
  request_params String?   @db.Text
  request_time   Int?      @db.UnsignedInt
  user_agent     String?   @db.VarChar(500)
  ip             String?   @db.VarChar(32)
  status         Int?      @db.UnsignedTinyInt
  creator_name   String?   @db.VarChar(50)
  creator_id     Int?
  create_time    DateTime? @db.DateTime(0)
  update_time    DateTime? @db.DateTime(0)
  updater_id     Int?
  is_delete      Int?      @db.TinyInt
}

model announcement_user_association {
  id              Int       @id @default(autoincrement())
  announcement_id BigInt?
  member_account  String?   @db.VarChar(64)
  is_read         Int?      @db.TinyInt
  create_time     DateTime? @db.DateTime(0)
  update_time     DateTime? @db.DateTime(0)
  is_delete       Boolean?
}

model announcements {
  id             Int       @id @default(autoincrement())
  title          String?   @db.VarChar(255)
  context        String?   @db.Text
  recipient_type Int?      @db.TinyInt
  role_ids       String?   @db.VarChar(64)
  published_date DateTime? @db.DateTime(0)
  member_account String?   @db.VarChar(64)
  create_time    DateTime? @db.DateTime(0)
  update_time    DateTime? @db.DateTime(0)
  is_delete      Boolean?
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model cart {
  id             BigInt?
  member_account String?   @db.VarChar(64)
  total_amount   Decimal?  @db.Decimal(10, 2)
  create_time    DateTime? @db.DateTime(0)
  update_time    DateTime? @db.DateTime(0)
  is_delete      Int?      @db.TinyInt

  @@ignore
}

model cart_item {
  id                  BigInt    @id
  cart_id             BigInt?
  product_id          BigInt?
  product_name        String?   @db.VarChar(64)
  product_pic         String?   @db.VarChar(64)
  product_price       Decimal?  @db.Decimal(10, 2)
  product_quantity    Int?
  product_category_id BigInt?
  create_time         DateTime? @db.DateTime(0)
  update_time         DateTime? @db.DateTime(0)
  is_delete           Int?      @db.TinyInt
}

model dictonary {
  id             BigInt    @id
  dict_name      String?   @db.VarChar(64)
  dict_code      String?   @db.VarChar(64)
  description    String?   @db.VarChar(255)
  type           Int?
  create_account String?   @db.VarChar(64)
  update_account String?   @db.VarChar(64)
  create_time    DateTime? @db.DateTime(0)
  update_time    DateTime? @db.DateTime(0)
  is_delete      Int?      @db.TinyInt
}

model dictonary_item {
  id             BigInt    @id
  dict_id        BigInt?
  item_text      String?   @db.VarChar(64)
  item_value     String?   @db.VarChar(255)
  description    String?   @db.VarChar(255)
  sort           Int?
  status         Int?
  create_account String?   @db.VarChar(64)
  update_account String?   @db.VarChar(64)
  create_time    DateTime? @db.DateTime(0)
  update_time    DateTime? @db.DateTime(0)
  is_delete      Int?      @db.TinyInt
}

model order {
  id             BigInt    @id
  member_account String?   @db.VarChar(64)
  total_amount   Decimal?  @db.Decimal(10, 2)
  txn_hash       String?   @db.VarChar(64)
  pay_amount     Decimal?  @db.Decimal(10, 2)
  pay_type       Int?
  status         Int?
  order_type     Int?
  delete_tatus   Int?
  payment_time   DateTime? @db.DateTime(0)
  delivery_time  DateTime? @db.DateTime(0)
  receive_time   DateTime? @db.DateTime(0)
  create_time    DateTime? @db.DateTime(0)
  update_time    DateTime? @db.DateTime(0)
  is_delete      Int?      @db.TinyInt
}

model order_item {
  id                  BigInt    @id
  order_id            BigInt?
  product_id          BigInt?
  product_name        String?   @db.VarChar(64)
  product_pic         String?   @db.VarChar(64)
  product_price       Decimal?  @db.Decimal(10, 2)
  product_quantity    Int?
  product_category_id BigInt?
  create_time         DateTime? @db.DateTime(0)
  update_time         DateTime? @db.DateTime(0)
  is_delete           Int?      @db.TinyInt
}

model permission {
  id                     BigInt    @id
  permission_name        String?   @db.VarChar(64)
  permission_description String?   @db.VarChar(255)
  create_time            DateTime? @db.DateTime(0)
  update_time            DateTime? @db.DateTime(0)
  is_delete              Int?      @db.TinyInt
}

model product {
  id             BigInt    @id
  current_owner  String?   @db.VarChar(64)
  token_contract String?   @db.VarChar(64)
  token_id       Int?
  token_standard String?   @db.VarChar(64)
  blockchain     String?   @db.VarChar(64)
  name           String?   @db.VarChar(64)
  pic            String?   @db.VarChar(255)
  delete_status  Int?      @db.TinyInt
  sort           Int?
  price          Decimal?  @db.Decimal(10, 2)
  sub_title      String?   @db.VarChar(255)
  description    String?   @db.Text
  total          Int?
  stock          Int?
  uint           String?   @db.VarChar(16)
  keywords       String?   @db.VarChar(255)
  note           String?   @db.VarChar(255)
  create_time    DateTime? @db.DateTime(0)
  update_time    DateTime? @db.DateTime(0)
  is_delete      Int?      @db.TinyInt
}

model product_attribute {
  id          BigInt    @id
  category_id BigInt?
  name        String?   @db.VarChar(64)
  select_type Int?
  input_type  Int?
  input_list  String?   @db.VarChar(255)
  sort        Int?
  create_time DateTime? @db.DateTime(0)
  update_time DateTime? @db.DateTime(0)
  is_delete   Int?      @db.TinyInt
}

model product_attribute_value {
  id                   BigInt    @id
  product_id           BigInt?
  product_attribute_id BigInt?
  value                String?   @db.VarChar(64)
  create_time          DateTime? @db.DateTime(0)
  update_time          DateTime? @db.DateTime(0)
  is_delete            Int?      @db.TinyInt
}

model product_category {
  id          BigInt    @id
  parent_id   BigInt?
  name        String?   @db.VarChar(64)
  level       Int?
  show_status Int?
  sort        Int?
  keywords    String?   @db.VarChar(255)
  parent_ids  String?   @db.VarChar(255)
  discription String?   @db.VarChar(255)
  create_time DateTime? @db.DateTime(0)
  update_time DateTime? @db.DateTime(0)
  is_delete   Int?      @db.TinyInt
}

model role_permission_association {
  id            BigInt    @id @default(autoincrement())
  role_id       BigInt?
  permission_id BigInt?
  create_time   DateTime? @db.DateTime(0)
  update_time   DateTime? @db.DateTime(0)
  is_delete     Int?      @db.TinyInt
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model user_role_association {
  id             BigInt?
  member_account String?   @db.VarChar(64)
  role_id        BigInt?
  create_time    DateTime? @db.DateTime(0)
  update_time    DateTime? @db.DateTime(0)
  is_delete      Int?      @db.TinyInt

  @@ignore
}
